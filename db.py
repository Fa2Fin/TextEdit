import os
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog

import function
import links
from QCodeEditor import QCodeEditor


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 650)
        MainWindow.setMinimumSize(QtCore.QSize(600, 650))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.start = QtWidgets.QWidget()
        self.start.setObjectName("start")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.start)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox = QtWidgets.QGroupBox(self.start)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.shared_outlook = QtWidgets.QPushButton(self.groupBox)
        self.shared_outlook.setMaximumSize(QtCore.QSize(134, 23))
        self.shared_outlook.setObjectName("shared_outlook")
        self.gridLayout.addWidget(self.shared_outlook, 1, 1, 1, 1)
        self.mwt = QtWidgets.QPushButton(self.groupBox)
        self.mwt.setMaximumSize(QtCore.QSize(134, 23))
        self.mwt.setObjectName("mwt")
        self.gridLayout.addWidget(self.mwt, 0, 0, 1, 1)
        self.gdff = QtWidgets.QPushButton(self.groupBox)
        self.gdff.setMaximumSize(QtCore.QSize(134, 23))
        self.gdff.setObjectName("gdff")
        self.gridLayout.addWidget(self.gdff, 1, 0, 1, 1)
        self.siebel = QtWidgets.QPushButton(self.groupBox)
        self.siebel.setMaximumSize(QtCore.QSize(134, 23))
        self.siebel.setObjectName("siebel")
        self.gridLayout.addWidget(self.siebel, 2, 0, 1, 1)
        self.outlook = QtWidgets.QPushButton(self.groupBox)
        self.outlook.setMaximumSize(QtCore.QSize(134, 23))
        self.outlook.setObjectName("outlook")
        self.gridLayout.addWidget(self.outlook, 0, 1, 1, 1)
        self.suz = QtWidgets.QPushButton(self.groupBox)
        self.suz.setMaximumSize(QtCore.QSize(134, 23))
        self.suz.setObjectName("suz")
        self.gridLayout.addWidget(self.suz, 2, 1, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.start)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.reports_nw = QtWidgets.QPushButton(self.groupBox_2)
        self.reports_nw.setMaximumSize(QtCore.QSize(134, 23))
        self.reports_nw.setObjectName("reports_nw")
        self.gridLayout_2.addWidget(self.reports_nw, 0, 1, 1, 1)
        self.reports_msk = QtWidgets.QPushButton(self.groupBox_2)
        self.reports_msk.setMaximumSize(QtCore.QSize(134, 23))
        self.reports_msk.setObjectName("reports_msk")
        self.gridLayout_2.addWidget(self.reports_msk, 0, 0, 1, 1)
        self.reports_sib = QtWidgets.QPushButton(self.groupBox_2)
        self.reports_sib.setMaximumSize(QtCore.QSize(134, 23))
        self.reports_sib.setObjectName("reports_sib")
        self.gridLayout_2.addWidget(self.reports_sib, 1, 1, 1, 1)
        self.reports_pv = QtWidgets.QPushButton(self.groupBox_2)
        self.reports_pv.setMaximumSize(QtCore.QSize(134, 23))
        self.reports_pv.setObjectName("reports_pv")
        self.gridLayout_2.addWidget(self.reports_pv, 1, 0, 1, 1)
        self.reports_ug = QtWidgets.QPushButton(self.groupBox_2)
        self.reports_ug.setMaximumSize(QtCore.QSize(134, 23))
        self.reports_ug.setObjectName("reports_ug")
        self.gridLayout_2.addWidget(self.reports_ug, 2, 0, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.groupBox_3 = QtWidgets.QGroupBox(self.start)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.collection = QtWidgets.QPushButton(self.groupBox_3)
        self.collection.setMaximumSize(QtCore.QSize(134, 23))
        self.collection.setObjectName("collection")
        self.gridLayout_3.addWidget(self.collection, 0, 1, 1, 1)
        self.foris_sz = QtWidgets.QPushButton(self.groupBox_3)
        self.foris_sz.setMaximumSize(QtCore.QSize(134, 23))
        self.foris_sz.setObjectName("foris_sz")
        self.gridLayout_3.addWidget(self.foris_sz, 1, 0, 1, 1)
        self.foris_msk = QtWidgets.QPushButton(self.groupBox_3)
        self.foris_msk.setMaximumSize(QtCore.QSize(134, 23))
        self.foris_msk.setObjectName("foris_msk")
        self.gridLayout_3.addWidget(self.foris_msk, 0, 0, 1, 1)
        self.foris_pv = QtWidgets.QPushButton(self.groupBox_3)
        self.foris_pv.setMaximumSize(QtCore.QSize(134, 23))
        self.foris_pv.setObjectName("foris_pv")
        self.gridLayout_3.addWidget(self.foris_pv, 3, 0, 1, 1)
        self.foris_ug = QtWidgets.QPushButton(self.groupBox_3)
        self.foris_ug.setMaximumSize(QtCore.QSize(134, 23))
        self.foris_ug.setObjectName("foris_ug")
        self.gridLayout_3.addWidget(self.foris_ug, 4, 0, 1, 1)
        self.rl = QtWidgets.QPushButton(self.groupBox_3)
        self.rl.setMaximumSize(QtCore.QSize(134, 23))
        self.rl.setObjectName("rl")
        self.gridLayout_3.addWidget(self.rl, 0, 2, 1, 1)
        self.puls = QtWidgets.QPushButton(self.groupBox_3)
        self.puls.setMaximumSize(QtCore.QSize(134, 23))
        self.puls.setObjectName("puls")
        self.gridLayout_3.addWidget(self.puls, 0, 4, 1, 1)
        self.foris_sib = QtWidgets.QPushButton(self.groupBox_3)
        self.foris_sib.setMaximumSize(QtCore.QSize(134, 23))
        self.foris_sib.setObjectName("foris_sib")
        self.gridLayout_3.addWidget(self.foris_sib, 2, 0, 1, 1)
        self.vm = QtWidgets.QPushButton(self.groupBox_3)
        self.vm.setMaximumSize(QtCore.QSize(134, 23))
        self.vm.setObjectName("vm")
        self.gridLayout_3.addWidget(self.vm, 1, 2, 1, 1)
        self.helpdesk = QtWidgets.QPushButton(self.groupBox_3)
        self.helpdesk.setMaximumSize(QtCore.QSize(134, 23))
        self.helpdesk.setObjectName("helpdesk")
        self.gridLayout_3.addWidget(self.helpdesk, 1, 1, 1, 1)
        self.otpusk = QtWidgets.QPushButton(self.groupBox_3)
        self.otpusk.setMaximumSize(QtCore.QSize(134, 23))
        self.otpusk.setObjectName("otpusk")
        self.gridLayout_3.addWidget(self.otpusk, 1, 4, 1, 1)
        self.allplus = QtWidgets.QPushButton(self.groupBox_3)
        self.allplus.setMaximumSize(QtCore.QSize(134, 23))
        self.allplus.setObjectName("allplus")
        self.gridLayout_3.addWidget(self.allplus, 2, 1, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox_3)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.tabWidget.addTab(self.start, "")
        self.second = QtWidgets.QWidget()
        self.second.setObjectName("second")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.second)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.textEdit = QCodeEditor(self.second)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_4.addWidget(self.textEdit, 0, 0, 1, 1)
        try:
            with open(os.path.abspath('my_python_base.bin')) as my_file:
                txt = my_file.readlines()
                print(txt)
                self.textEdit.setPlainText('/n'.join(txt))
        except:
            my_file = open("my_python_base.bin", "w+")
            my_file.close()
        self.groupBox_4 = QtWidgets.QGroupBox(self.second)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout.setObjectName("verticalLayout")
        self.clean = QtWidgets.QPushButton(self.groupBox_4)
        self.clean.setObjectName("clean")
        self.verticalLayout.addWidget(self.clean)
        self.cut = QtWidgets.QPushButton(self.groupBox_4)
        self.cut.setObjectName("cut")
        self.verticalLayout.addWidget(self.cut)
        spacerItem = QtWidgets.QSpacerItem(100, 400, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem)
        self.create_db = QtWidgets.QPushButton(self.groupBox_4)
        self.create_db.setObjectName("create_db")
        self.verticalLayout.addWidget(self.create_db)
        self.gridLayout_4.addWidget(self.groupBox_4, 0, 1, 1, 1)
        self.tabWidget.addTab(self.second, "")
        self.third = QtWidgets.QWidget()
        self.third.setObjectName("third")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.third)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.groupBox_8 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_8.setFont(font)
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label = QtWidgets.QLabel(self.groupBox_8)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_9.addWidget(self.label, 0, 0, 1, 1)
        self.replace_edit = QtWidgets.QPlainTextEdit(self.groupBox_8)
        self.replace_edit.setMaximumSize(QtCore.QSize(131, 25))
        self.replace_edit.setObjectName("replace_edit")
        self.gridLayout_9.addWidget(self.replace_edit, 1, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_8)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_9.addWidget(self.label_2, 2, 0, 1, 1)
        self.after_replace_edit = QtWidgets.QPlainTextEdit(self.groupBox_8)
        self.after_replace_edit.setMaximumSize(QtCore.QSize(131, 25))
        self.after_replace_edit.setObjectName("after_replace_edit")
        self.gridLayout_9.addWidget(self.after_replace_edit, 3, 0, 1, 1)
        self.replace_button = QtWidgets.QPushButton(self.groupBox_8)
        self.replace_button.setMaximumSize(QtCore.QSize(131, 25))
        self.replace_button.setObjectName("replace_button")
        self.gridLayout_9.addWidget(self.replace_button, 4, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem1, 5, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_8, 1, 1, 1, 1)
        self.groupBox_7 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_7.setFont(font)
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_3 = QtWidgets.QLabel(self.groupBox_7)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_10.addWidget(self.label_3, 0, 0, 1, 1)
        self.cut_stroki = QtWidgets.QPlainTextEdit(self.groupBox_7)
        self.cut_stroki.setMaximumSize(QtCore.QSize(131, 25))
        self.cut_stroki.setObjectName("cut_stroki")
        self.gridLayout_10.addWidget(self.cut_stroki, 1, 0, 1, 1)
        self.save_cut = QtWidgets.QPushButton(self.groupBox_7)
        self.save_cut.setMaximumSize(QtCore.QSize(131, 25))
        self.save_cut.setObjectName("save_cut")
        self.gridLayout_10.addWidget(self.save_cut, 2, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 250, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_10.addItem(spacerItem2, 3, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_7, 1, 2, 1, 1)
        self.groupBox_9 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_9.setFont(font)
        self.groupBox_9.setObjectName("groupBox_9")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.groupBox_9)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.cut_symbol = QtWidgets.QPlainTextEdit(self.groupBox_9)
        self.cut_symbol.setMaximumSize(QtCore.QSize(131, 25))
        self.cut_symbol.setObjectName("cut_symbol")
        self.gridLayout_11.addWidget(self.cut_symbol, 0, 0, 1, 1)
        self.cut_symbol_start = QtWidgets.QPushButton(self.groupBox_9)
        self.cut_symbol_start.setMaximumSize(QtCore.QSize(131, 25))
        self.cut_symbol_start.setObjectName("cut_symbol_start")
        self.gridLayout_11.addWidget(self.cut_symbol_start, 1, 0, 1, 1)
        self.cut_symbol_end = QtWidgets.QPushButton(self.groupBox_9)
        self.cut_symbol_end.setMaximumSize(QtCore.QSize(131, 25))
        self.cut_symbol_end.setObjectName("cut_symbol_end")
        self.gridLayout_11.addWidget(self.cut_symbol_end, 2, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_9, 2, 1, 1, 1)
        self.groupBox_6 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_6.setFont(font)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_4 = QtWidgets.QLabel(self.groupBox_6)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_8.addWidget(self.label_4, 0, 0, 1, 1)
        self.edit = QtWidgets.QPlainTextEdit(self.groupBox_6)
        self.edit.setMaximumSize(QtCore.QSize(131, 25))
        self.edit.setObjectName("edit")
        self.gridLayout_8.addWidget(self.edit, 1, 0, 1, 1)
        self.edit_dell = QtWidgets.QPushButton(self.groupBox_6)
        self.edit_dell.setMaximumSize(QtCore.QSize(131, 25))
        self.edit_dell.setObjectName("edit_dell")
        self.gridLayout_8.addWidget(self.edit_dell, 2, 0, 1, 1)
        self.edit_spacer = QtWidgets.QPushButton(self.groupBox_6)
        self.edit_spacer.setMaximumSize(QtCore.QSize(131, 25))
        self.edit_spacer.setObjectName("edit_spacer")
        self.gridLayout_8.addWidget(self.edit_spacer, 3, 0, 1, 1)
        self.edit_double = QtWidgets.QPushButton(self.groupBox_6)
        self.edit_double.setMaximumSize(QtCore.QSize(131, 25))
        self.edit_double.setObjectName("edit_double")
        self.gridLayout_8.addWidget(self.edit_double, 4, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_6, 0, 2, 1, 1)
        self.groupBox_5 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.contract_list = QtWidgets.QPushButton(self.groupBox_5)
        self.contract_list.setMaximumSize(QtCore.QSize(131, 25))
        self.contract_list.setObjectName("contract_list")
        self.gridLayout_7.addWidget(self.contract_list, 0, 0, 1, 1)
        self.ls_list = QtWidgets.QPushButton(self.groupBox_5)
        self.ls_list.setMaximumSize(QtCore.QSize(131, 25))
        self.ls_list.setObjectName("ls_list")
        self.gridLayout_7.addWidget(self.ls_list, 1, 0, 1, 1)
        self.po_list = QtWidgets.QPushButton(self.groupBox_5)
        self.po_list.setMaximumSize(QtCore.QSize(131, 25))
        self.po_list.setObjectName("po_list")
        self.gridLayout_7.addWidget(self.po_list, 2, 0, 1, 1)
        self.save_spisok = QtWidgets.QPushButton(self.groupBox_5)
        self.save_spisok.setMaximumSize(QtCore.QSize(131, 25))
        self.save_spisok.setObjectName("save_spisok")
        self.gridLayout_7.addWidget(self.save_spisok, 3, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_5, 0, 1, 1, 1)
        self.textEdit_2 = QCodeEditor(self.third)
        self.textEdit_2.setObjectName("textEdit_2")
        self.gridLayout_5.addWidget(self.textEdit_2, 0, 0, 3, 1)
        self.groupBox_10 = QtWidgets.QGroupBox(self.third)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_10.setFont(font)
        self.groupBox_10.setObjectName("groupBox_10")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_10)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.dell7 = QtWidgets.QPushButton(self.groupBox_10)
        self.dell7.setMaximumSize(QtCore.QSize(131, 25))
        self.dell7.setObjectName("dell7")
        self.gridLayout_6.addWidget(self.dell7, 0, 0, 1, 1)
        self.cut_range = QtWidgets.QPlainTextEdit(self.groupBox_10)
        self.cut_range.setMaximumSize(QtCore.QSize(131, 25))
        self.cut_range.setObjectName("cut_range")
        self.gridLayout_6.addWidget(self.cut_range, 1, 0, 1, 1)
        self.cut_range.setPlainText('100')
        self.cut100 = QtWidgets.QPushButton(self.groupBox_10)
        self.cut100.setMaximumSize(QtCore.QSize(131, 25))
        self.cut100.setObjectName("cut100")
        self.gridLayout_6.addWidget(self.cut100, 2, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_10, 2, 2, 1, 1)
        self.tabWidget.addTab(self.third, "")
        self.horizontalLayout_4.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.links_clicked()
        self.action_clicked()
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ККашная программа"))
        self.groupBox.setTitle(_translate("MainWindow", "Начало дня"))
        self.shared_outlook.setText(_translate("MainWindow", "Общая почта"))
        self.mwt.setText(_translate("MainWindow", "MWT"))
        self.gdff.setText(_translate("MainWindow", "GDFF"))
        self.siebel.setText(_translate("MainWindow", "Siebel"))
        self.outlook.setText(_translate("MainWindow", "Почта"))
        self.suz.setText(_translate("MainWindow", "СУЗ"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Reports"))
        self.reports_nw.setText(_translate("MainWindow", "СЗ"))
        self.reports_msk.setText(_translate("MainWindow", "Москва/Центр"))
        self.reports_sib.setText(_translate("MainWindow", "Сибирь"))
        self.reports_pv.setText(_translate("MainWindow", "ПВ/Урал"))
        self.reports_ug.setText(_translate("MainWindow", "Юг"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Самое нужное"))
        self.collection.setText(_translate("MainWindow", "Collection"))
        self.foris_sz.setText(_translate("MainWindow", "Foris СЗ"))
        self.foris_msk.setText(_translate("MainWindow", "Foris МСК"))
        self.foris_pv.setText(_translate("MainWindow", "Foris ПВ"))
        self.foris_ug.setText(_translate("MainWindow", "Foris ЮГ"))
        self.rl.setText(_translate("MainWindow", "Расти Легко"))
        self.puls.setText(_translate("MainWindow", "Портал Пульс"))
        self.foris_sib.setText(_translate("MainWindow", "Foris Сиб"))
        self.vm.setText(_translate("MainWindow", "ЛК МТС Бизнес"))
        self.helpdesk.setText(_translate("MainWindow", "HeplDesk"))
        self.otpusk.setText(_translate("MainWindow", "Отпуск"))
        self.allplus.setText(_translate("MainWindow", "Сплошные плюсы"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.start), _translate("MainWindow", "Ссылки"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Кнопочки"))
        self.clean.setText(_translate("MainWindow", "Очистить все"))
        self.cut.setText(_translate("MainWindow", "Отделить заявку"))
        self.create_db.setText(_translate("MainWindow", "Сохранить в БД"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.second), _translate("MainWindow", "Блокнот"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Замена"))
        self.label.setText(_translate("MainWindow", "Символ до замены"))
        self.label_2.setText(_translate("MainWindow", "После замены"))
        self.replace_button.setText(_translate("MainWindow", "Заменить"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Распилить список"))
        self.label_3.setText(_translate("MainWindow", "Кол-во строк"))
        self.save_cut.setText(_translate("MainWindow", "Сохранить"))
        self.groupBox_9.setTitle(_translate("MainWindow", "Обрезать символы"))
        self.cut_symbol_start.setText(_translate("MainWindow", "Слева"))
        self.cut_symbol_end.setText(_translate("MainWindow", "Справа"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Редактор"))
        self.label_4.setText(_translate("MainWindow", "Символ для удаления"))
        self.edit_dell.setText(_translate("MainWindow", "Удалить"))
        self.edit_spacer.setText(_translate("MainWindow", "Удалить пробелы"))
        self.edit_double.setText(_translate("MainWindow", "Удалить дубли"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Обычный список"))
        self.contract_list.setText(_translate("MainWindow", "По контракту"))
        self.ls_list.setText(_translate("MainWindow", "По ЛС"))
        self.po_list.setText(_translate("MainWindow", "По номеру"))
        self.save_spisok.setText(_translate("MainWindow", "Сохранить список"))
        self.groupBox_10.setTitle(_translate("MainWindow", "Для ЗГП"))
        self.dell7.setText(_translate("MainWindow", "Удалить 7ку"))
        self.cut100.setText(_translate("MainWindow", "Вырезать в буфер"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.third), _translate("MainWindow", "Для ГО"))

    def links_clicked(self):
        self.mwt.clicked.connect(links.open_mwt_program)
        self.gdff.clicked.connect(links.open_gdff_program)
        self.siebel.clicked.connect(links.siebel_ie_open)
        self.outlook.clicked.connect(links.mail_open)
        self.helpdesk.clicked.connect(links.help_desk_open)
        self.suz.clicked.connect(links.suz_open)
        self.allplus.clicked.connect(links.allplus_open)
        self.vm.clicked.connect(links.virt_men_open)
        self.puls.clicked.connect(links.puls_open)
        self.shared_outlook.clicked.connect(links.shared_mail_open)
        self.foris_msk.clicked.connect(links.foris_msk_open)
        self.foris_sz.clicked.connect(links.foris_sz_open)
        self.foris_pv.clicked.connect(links.foris_pv_open)
        self.foris_sib.clicked.connect(links.foris_sib_open)
        self.foris_ug.clicked.connect(links.foris_ug_open)
        self.collection.clicked.connect(links.collection_open)
        self.rl.clicked.connect(links.open_rl)
        self.reports_msk.clicked.connect(links.reports_msk_open)
        self.reports_nw.clicked.connect(links.reports_sz_open)
        self.reports_pv.clicked.connect(links.reports_pv_open)
        self.reports_sib.clicked.connect(links.reports_sib_open)
        self.reports_ug.clicked.connect(links.reports_ug_open)
        self.otpusk.clicked.connect(links.vrm_ie_open)

    def action_clicked(self):
        self.contract_list.clicked.connect(self.returned_contract)
        self.ls_list.clicked.connect(self.returned_ls)
        self.po_list.clicked.connect(self.returned_po)
        self.save_spisok.clicked.connect(self.save_normal_list)
        self.edit_dell.clicked.connect(self.remove_symbol)
        self.replace_button.clicked.connect(self.replace_symbol)
        self.edit_double.clicked.connect(self.remove_duplicate)
        self.clean.clicked.connect(self.delete_text_application)
        self.dell7.clicked.connect(self.delete_7_numbers_zgp)
        self.cut100.clicked.connect(self.copy_clipboard)
        self.save_cut.clicked.connect(self.split_list)
        self.cut_symbol_start.clicked.connect(self.cropping_first_func)
        self.cut_symbol_end.clicked.connect(self.cropping_last_func)
        self.edit_spacer.clicked.connect(self.dell_spacer_func)
        self.cut.clicked.connect(self.add_hyphens)
        self.create_db.clicked.connect(self.add_db)

    def returned_contract(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        if user_list:
            corrected_list = function.removing_extra_characters(user_list)
            self.textEdit_2.setPlainText(function.returned_contract(corrected_list))
        else:
            pass

    def returned_ls(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        if user_list:
            corrected_list = function.removing_extra_characters(user_list)
            self.textEdit_2.setPlainText(function.returned_ls(corrected_list))
        else:
            pass

    def returned_po(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        if user_list:
            corrected_list = function.removing_extra_characters(user_list)
            self.textEdit_2.setPlainText(function.returned_po(corrected_list))
        else:
            pass

    def save_normal_list(self):
        file = QFileDialog(self.centralwidget)
        file.setDefaultSuffix('.txt')
        file_name = file.getSaveFileName(file, file.tr("Save file"), '', file.tr("*.txt"))[0]
        try:
            with open(file_name, 'w+', encoding='utf-8-sig') as f:
                self.textEdit_2.toPlainText()
                text = self.textEdit_2.toPlainText()
                f.write(text)
        except:
            pass

    def remove_symbol(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        removing_symbol = list(self.edit.toPlainText().split())
        if len(user_list) != 0 or len(removing_symbol) != 0:
            self.textEdit_2.setPlainText(function.remove_symbol(user_list, removing_symbol))
        else:
            pass

    def replace_symbol(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        replace_symbol = list(self.replace_edit.toPlainText().split())[0]
        symbol_after_replacement = list(self.after_replace_edit.toPlainText().split())[0]
        if len(user_list) != 0 or len(replace_symbol) != 0 or len(symbol_after_replacement) != 0:
            self.textEdit_2.setPlainText(
                function.replace_symbol(user_list, replace_symbol, symbol_after_replacement))
        else:
            pass

    def remove_duplicate(self):
        user_list = set(self.textEdit_2.toPlainText().split())
        change_text = '\n'.join(user_list)
        self.textEdit_2.setPlainText(change_text)

    def delete_text_application(self):
        self.textEdit.setPlainText('')

    def add_hyphens(self):
        user_list = self.textEdit.toPlainText()
        user_list = user_list + '\n' + ('=' * 100) + '\n'
        self.textEdit.setPlainText(user_list)

    def delete_7_numbers_zgp(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        corrected_list = function.removing_extra_characters(user_list)
        list_without_seven = function.delete_7_numbers_zgp(corrected_list)
        self.textEdit_2.setPlainText(list_without_seven)

    def copy_clipboard(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        number = int(self.cut_range.toPlainText())
        if len(user_list) != 0:
            clipboard.setText(function.copy_clipboard(user_list, number))
            self.textEdit_2.setPlainText(function.remains(user_list, number))
        else:
            pass

    def split_list(self):
        file = QFileDialog(self.centralwidget)
        file.setDefaultSuffix('.txt')
        file_name = file.getSaveFileName(file, file.tr("Save file"), '', file.tr("*.txt"))[0]
        user_list = list(self.textEdit_2.toPlainText().split())
        number_range = self.cut_stroki.toPlainText()
        try:
            if isinstance(int(number_range), int):
                number_range = int(number_range)
                for index in range((len(user_list) // number_range) + 1):
                    replace_text = str(file_name)
                    if len(user_list) != 0:
                        data = user_list[:number_range]
                        data_to_save = '\n'.join(data)
                        save_name = replace_text.replace('.txt', ('_' + str(index) + '.txt'))
                        with open(save_name, 'w+', encoding='utf-8-sig') as f:
                            f.write(data_to_save)
                        user_list = user_list[number_range:]

            else:
                pass
        except:
            pass

    def cropping_first_func(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        number_characters = list(self.cut_symbol.toPlainText().split())[0]
        if isinstance(int(number_characters), int) and len(user_list) != 0:
            self.textEdit_2.setPlainText(function.cropping_first_func(user_list, int(number_characters)))
        else:
            pass

    def cropping_last_func(self):
        user_list = list(self.textEdit_2.toPlainText().split())
        number_characters = list(self.cut_symbol.toPlainText().split())[0]
        if isinstance(int(number_characters), int) and len(user_list) != 0:
            self.textEdit_2.setPlainText(function.cropping_last_func(user_list, int(number_characters)))
        else:
            pass

    def dell_spacer_func(self):
        user_list = list(self.textEdit_2.toPlainText().split('\n'))
        if len(user_list) != 0:
            change_text = '\n'.join(function.removing_spaser(user_list))
            self.textEdit_2.setPlainText(change_text)
        else:
            pass

    def add_db(self):
        txt = self.textEdit.toPlainText().split()
        my_file = open(os.path.abspath('my_python_base.bin'), "w+")
        print(txt)
        my_file.writelines('\n'.join(item for item in txt))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    clipboard = app.clipboard()
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
